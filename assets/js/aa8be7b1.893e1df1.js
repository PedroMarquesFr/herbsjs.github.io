"use strict";(self.webpackChunkherbjs=self.webpackChunkherbjs||[]).push([[5238],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,h=d["".concat(l,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91645:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"refactoring",title:"7. Refactoring",sidebar_label:"7. Refactoring",slug:"/tutorial/refactoring"},l={unversionedId:"tutorial/refactoring",id:"tutorial/refactoring",isDocsHomePage:!1,title:"7. Refactoring",description:"Adding a Field",source:"@site/docs/tutorial/refactoring.md",sourceDirName:"tutorial",slug:"/tutorial/refactoring",permalink:"/docs/tutorial/refactoring",editUrl:"https://github.com/herbsjs/herbsjs.github.io/docs/tutorial/refactoring.md",version:"current",sidebar_label:"7. Refactoring",frontMatter:{id:"refactoring",title:"7. Refactoring",sidebar_label:"7. Refactoring",slug:"/tutorial/refactoring"},sidebar:"sidebar",previous:{title:"6. Generating Herbs Shelf",permalink:"/docs/tutorial/herbsshelf"},next:{title:"8. Security and Auditing",permalink:"/docs/tutorial/security"}},u=[{value:"Adding a Field",id:"adding-a-field",children:[]},{value:"Changing a Field&#39;s Type",id:"changing-a-fields-type",children:[]},{value:"Adding an Use Case",id:"adding-an-use-case",children:[{value:"GraphQL Setup",id:"graphql-setup",children:[]},{value:"Herbs Shelf",id:"herbs-shelf",children:[]}]}],c={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"adding-a-field"},"Adding a Field"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Migration"),(0,i.kt)("li",{parentName:"ul"},"Result")),(0,i.kt)("h2",{id:"changing-a-fields-type"},"Changing a Field's Type"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Migration"),(0,i.kt)("li",{parentName:"ul"},"Result")),(0,i.kt)("h2",{id:"adding-an-use-case"},"Adding an Use Case"),(0,i.kt)("p",null,"When you add a new use case, you have to add them to the setup files. Check out the process:"),(0,i.kt)("h3",{id:"graphql-setup"},"GraphQL Setup"),(0,i.kt)("p",null,"As mentioned in ",(0,i.kt)("a",{parentName:"p",href:"./graphql"},"Generating GraphQL Endpoint"),", the operations are set in the files: ",(0,i.kt)("inlineCode",{parentName:"p"},"queries.js")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"mutations.js"),"."),(0,i.kt)("p",null,"So, once you've created a new use case, you have to add it to one of them. If the use case create or update data, put it in ",(0,i.kt)("inlineCode",{parentName:"p"},"mutations.js"),". If it just fetch data, put it in ",(0,i.kt)("inlineCode",{parentName:"p"},"queries.js"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// src/infra/api/graphql/queries.js\nconst { usecase2query, defaultResolver } = require('@herbsjs/herbs2gql')\n\n// Require all the usecases and put them\n// in a list.\nconst usecases = [\n    /** ... previous usecases */\n    require('../../../domain/usecases/list/myNewUsecase.js').myNewUsecase,\n]\n\n/** ... */\n")),(0,i.kt)("p",null,"Now, the new usecase will show up in the GraphQL operations."),(0,i.kt)("h3",{id:"herbs-shelf"},"Herbs Shelf"),(0,i.kt)("p",null,"The process is similar for ",(0,i.kt)("a",{parentName:"p",href:"./herbsshelf"},"Herbs Shelf"),". Once you've created a new use case, you have to add it to the file ",(0,i.kt)("inlineCode",{parentName:"p"},"_uclist.js"),", passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"usecase")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"group")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"tags"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// src/domain/usecases/_uclist.js\nmodule.exports = (injection) => {\n    return [\n        /* ... previous usecases */\n        {\n            // the usecase with the injection\n            usecase: require('./myNewUsecase').myNewUsecase(injection),\n            // the tags to store metadata, such as the group\n            tags: { group: 'My Group' }\n        }\n    ]\n}\n")),(0,i.kt)("p",null,"Now, the new use case will show up in the docs."))}p.isMDXComponent=!0}}]);